[{"/home/uzair/Desktop/React/netflix-clone/src/App.js":"1","/home/uzair/Desktop/React/netflix-clone/src/index.js":"2","/home/uzair/Desktop/React/netflix-clone/src/reportWebVitals.js":"3","/home/uzair/Desktop/React/netflix-clone/src/Row.js":"4","/home/uzair/Desktop/React/netflix-clone/src/requests.js":"5","/home/uzair/Desktop/React/netflix-clone/src/axios.js":"6","/home/uzair/Desktop/React/netflix-clone/src/Banner.js":"7"},{"size":822,"mtime":1612730402685,"results":"8","hashOfConfig":"9"},{"size":500,"mtime":1612261592092,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612259717909,"results":"11","hashOfConfig":"9"},{"size":950,"mtime":1612388363756,"results":"12","hashOfConfig":"9"},{"size":716,"mtime":1612267204461,"results":"13","hashOfConfig":"9"},{"size":296,"mtime":1612384286353,"results":"14","hashOfConfig":"9"},{"size":1396,"mtime":1612736318987,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ohywkv",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/uzair/Desktop/React/netflix-clone/src/App.js",[],"/home/uzair/Desktop/React/netflix-clone/src/index.js",[],["33","34"],"/home/uzair/Desktop/React/netflix-clone/src/reportWebVitals.js",[],"/home/uzair/Desktop/React/netflix-clone/src/Row.js",["35"],"import React, { useState, useEffect} from 'react'\nimport axios from './axios';\nimport requests from './requests';\nimport './Row.css'\n\nconst base_URL = \"https://image.tmdb.org/t/p/original/\"\n\nconst Row = ({ title , fetchUrl , isLarge}) => {\n    const [movies , setMovies ] = useState([]);\n\n    useEffect(()=> {\n        async function fetchData(){\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results)\n            return request\n\n        }\n        fetchData();\n\n    },[fetchUrl]);\n\n  return (\n    <div className=\"row\">\n        <h2>{title}</h2>\n\n      <div className=\"row__posters\">\n        {movies.map( movie => (\n          <img className={`row__poster ${isLarge && \"row__posterLarge\"}` } \n          key={movie.id}\n              src={`${base_URL}${isLarge ? movie.poster_path : movie.backdrop_path}`} \n              alt={movie.name}/>\n\n        ))}\n\n      \n      </div>\n\n    </div>\n  )\n}\n\nexport default Row\n","/home/uzair/Desktop/React/netflix-clone/src/requests.js",[],["36","37"],"/home/uzair/Desktop/React/netflix-clone/src/axios.js",[],"/home/uzair/Desktop/React/netflix-clone/src/Banner.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":16},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'requests' is defined but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]